{"version":3,"sources":["component/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultOptions","color","iconColor","height","width","ImageComparisonSlider","props","imageRef","React","createRef","state","sliderPosition","dragging","startDragging","bind","stopDragging","drag","dragMobile","document","addEventListener","this","passive","removeEventListener","setState","console","log","e","rect","current","getBoundingClientRect","right","left","perc","clientX","Math","max","min","preventDefault","changedTouches","images","Error","length","filter","hasOwnProperty","options","className","style","ref","src","alt","onMouseDown","onTouchStart","xmlns","viewBox","d","text","Component","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e5e30da8.chunk.js","sourcesContent":["import './styles.css';\nimport React from 'react';\n\nconst defaultOptions = {\n  color: '#2188ff',\n  iconColor: '#fff',\n  height: '18.75rem',\n  width: '30rem',\n};\n\nexport default class ImageComparisonSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    this.state = {\n      sliderPosition: 50,\n      dragging: false,\n    };\n\n    this.startDragging = this.startDragging.bind(this);\n    this.stopDragging = this.stopDragging.bind(this);\n    this.drag = this.drag.bind(this);\n    this.dragMobile = this.dragMobile.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousemove', this.drag);\n    document.addEventListener('mouseup', this.stopDragging);\n\n    // mobile\n    document.addEventListener('touchend', this.stopDragging);\n    document.addEventListener('touchmove', this.dragMobile, { passive: false });\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.drag);\n    document.removeEventListener('mouseup', this.stopDragging);\n\n    // mobile\n    document.removeEventListener('touchend', this.stopDragging);\n    document.removeEventListener('touchmove', this.dragMobile);\n  }\n  stopDragging() {\n    this.setState({ dragging: false });\n  }\n  startDragging() {\n    console.log('go');\n    this.setState({ dragging: true });\n  }\n  drag(e) {\n    if (this.state.dragging) {\n      const rect = this.imageRef.current.getBoundingClientRect();\n      const width = rect.right - rect.left;\n      let perc = ((e.clientX - rect.left) / width) * 100;\n      perc = Math.max(10, perc);\n      perc = Math.min(90, perc);\n      this.setState({ sliderPosition: perc });\n    }\n  }\n  dragMobile(e) {\n    if (this.state.dragging) {\n      e.preventDefault();\n    }\n    this.drag(e.changedTouches[0]);\n  }\n  render() {\n    const { images } = this.props;\n\n    if (!images) {\n      throw new Error(\"Prop 'images' must be present.\");\n    } else if (images.length !== 2) {\n      throw new Error(\"Prop 'images' must have two elements.\");\n    } else if (images.filter((e) => e.hasOwnProperty('src') && e.hasOwnProperty('src')).length !== images.length) {\n      throw new Error(\"Every image must have an 'src' property and an 'alt' property.\");\n    }\n\n    const options = { ...defaultOptions, ...this.props.options };\n\n    return (\n      <div\n        className='__ReactImageComparisonSlider'\n        style={{\n          '--theme': options.color,\n          '--icon-color': options.iconColor,\n          '--left-offset': `${this.state.sliderPosition}%`,\n          '--height': options.height,\n          '--width': options.width,\n        }}\n        ref={this.imageRef}\n      >\n        <img src={images[1].src} alt={images[1].alt} />\n        <img src={images[0].src} alt={images[0].alt} />\n        <div onMouseDown={(e) => this.startDragging(e)} onTouchStart={(e) => this.startDragging(e)}>\n          <div>\n            <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n              <path d='M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z' />\n            </svg>\n            <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n              <path d='M7.33 24l-2.83-2.829 9.339-9.175-9.339-9.167 2.83-2.829 12.17 11.996z' />\n            </svg>\n          </div>\n        </div>\n        <div>\n          {images[0].text ? <p>{images[0].text}</p> : null}\n          {images[1].text ? <p>{images[1].text}</p> : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import ImageComparisonSlider from './component';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <h1>Image Comparison Slider Demo</h1>\n      <a href='https://github.com/xtrp/imagecomparisonslider/blob/main/lib/src/App.js' target='_blank' rel='noopener noreferrer'>\n        View The Code &rarr;\n      </a>\n      <div>\n        <ImageComparisonSlider\n          images={[\n            {\n              src: './spring.jpg',\n              alt: 'spring',\n              text: 'Spring',\n            },\n            {\n              src: './autumn.jpg',\n              alt: 'autumn',\n              text: 'Autumn',\n            },\n          ]}\n          options={{\n            color: '#27ae60',\n          }}\n        ></ImageComparisonSlider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}